# Copyright 2024 justin
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import matplotlib.pyplot as plt
import matplotlib.lines as mlines
import numpy as np
data = [
    [ '0', '5778054', 'λ3072', 'T2^20' ],
    [ '0', '6070757', 'λ3072', 'T2^21' ],
    [ '0', '6384804', 'λ3072', 'T2^22' ],
    [ '0', '6680421', 'λ3072', 'T2^23' ],
    [ '0', '6995380', 'λ3072', 'T2^24' ],
    [ '0', '7302610', 'λ3072', 'T2^25' ],
    [ '1', '5475184', 'λ3072', 'T2^20' ],
    [ '1', '5765842', 'λ3072', 'T2^21' ],
    [ '1', '6079849', 'λ3072', 'T2^22' ],
    [ '1', '6372178', 'λ3072', 'T2^23' ],
    [ '1', '6685507', 'λ3072', 'T2^24' ],
    [ '1', '6993738', 'λ3072', 'T2^25' ],
    [ '2', '5173868', 'λ3072', 'T2^20' ],
    [ '2', '5464636', 'λ3072', 'T2^21' ],
    [ '2', '5777661', 'λ3072', 'T2^22' ],
    [ '2', '6067494', 'λ3072', 'T2^23' ],
    [ '2', '6379374', 'λ3072', 'T2^24' ],
    [ '2', '6688747', 'λ3072', 'T2^25' ],
    [ '3', '4876240', 'λ3072', 'T2^20' ],
    [ '3', '5166335', 'λ3072', 'T2^21' ],
    [ '3', '5477190', 'λ3072', 'T2^22' ],
    [ '3', '5768017', 'λ3072', 'T2^23' ],
    [ '3', '6075414', 'λ3072', 'T2^24' ],
    [ '3', '6382418', 'λ3072', 'T2^25' ],
    [ '4', '4583680', 'λ3072', 'T2^20' ],
    [ '4', '4871447', 'λ3072', 'T2^21' ],
    [ '4', '5181643', 'λ3072', 'T2^22' ],
    [ '4', '5470061', 'λ3072', 'T2^23' ],
    [ '4', '5777367', 'λ3072', 'T2^24' ],
    [ '4', '6082213', 'λ3072', 'T2^25' ],
    [ '5', '4298179', 'λ3072', 'T2^20' ],
    [ '5', '4584599', 'λ3072', 'T2^21' ],
    [ '5', '4893860', 'λ3072', 'T2^22' ],
    [ '5', '5181202', 'λ3072', 'T2^23' ],
    [ '5', '5485617', 'λ3072', 'T2^24' ],
    [ '5', '5788382', 'λ3072', 'T2^25' ],
    [ '6', '4027424', 'λ3072', 'T2^20' ],
    [ '6', '4311015', 'λ3072', 'T2^21' ],
    [ '6', '4618735', 'λ3072', 'T2^22' ],
    [ '6', '4905508', 'λ3072', 'T2^23' ],
    [ '6', '5208441', 'λ3072', 'T2^24' ],
    [ '6', '5509926', 'λ3072', 'T2^25' ],
    [ '7', '3781536', 'λ3072', 'T2^20' ],
    [ '7', '4065919', 'λ3072', 'T2^21' ],
    [ '7', '4370845', 'λ3072', 'T2^22' ],
    [ '7', '4657239', 'λ3072', 'T2^23' ],
    [ '7', '4958592', 'λ3072', 'T2^24' ],
    [ '7', '5258080', 'λ3072', 'T2^25' ],
    [ '8', '3587881', 'λ3072', 'T2^20' ],
    [ '8', '3871059', 'λ3072', 'T2^21' ],
    [ '8', '4174106', 'λ3072', 'T2^22' ],
    [ '8', '4458917', 'λ3072', 'T2^23' ],
    [ '8', '4759073', 'λ3072', 'T2^24' ],
    [ '8', '5059255', 'λ3072', 'T2^25' ],
    [ '9', '3495396', 'λ3072', 'T2^20' ],
    [ '9', '3776893', 'λ3072', 'T2^21' ],
    [ '9', '4078468', 'λ3072', 'T2^22' ],
    [ '9', '4362630', 'λ3072', 'T2^23' ],
    [ '9', '4658937', 'λ3072', 'T2^24' ],
    [ '9', '4958138', 'λ3072', 'T2^25' ],
    [ '10', '3602458', 'λ3072', 'T2^20' ],
    [ '10', '3882843', 'λ3072', 'T2^21' ],
    [ '10', '4181505', 'λ3072', 'T2^22' ],
    [ '10', '4469364', 'λ3072', 'T2^23' ],
    [ '10', '4760588', 'λ3072', 'T2^24' ],
    [ '10', '5057200', 'λ3072', 'T2^25' ],
    [ '11', '4115156', 'λ3072', 'T2^20' ],
    [ '11', '4394928', 'λ3072', 'T2^21' ],
    [ '11', '4689319', 'λ3072', 'T2^22' ],
    [ '11', '4977427', 'λ3072', 'T2^23' ],
    [ '11', '5269516', 'λ3072', 'T2^24' ],
    [ '11', '5562764', 'λ3072', 'T2^25' ],
    [ '12', '5456033', 'λ3072', 'T2^20' ],
    [ '12', '5736449', 'λ3072', 'T2^21' ],
    [ '12', '6028906', 'λ3072', 'T2^22' ],
    [ '12', '6313412', 'λ3072', 'T2^23' ],
    [ '12', '6604961', 'λ3072', 'T2^24' ],
    [ '12', '6898156', 'λ3072', 'T2^25' ],
    [ '13', '8544849', 'λ3072', 'T2^20' ],
    [ '13', '8823002', 'λ3072', 'T2^21' ],
    [ '13', '9113029', 'λ3072', 'T2^22' ],
    [ '13', '9396432', 'λ3072', 'T2^23' ],
    [ '13', '9686779', 'λ3072', 'T2^24' ],
    [ '13', '9979909', 'λ3072', 'T2^25' ],
    [ '14', '15510388', 'λ3072', 'T2^20' ],
    [ '14', '15786795', 'λ3072', 'T2^21' ],
    [ '14', '16075009', 'λ3072', 'T2^22' ],
    [ '14', '16358977', 'λ3072', 'T2^23' ],
    [ '14', '16646721', 'λ3072', 'T2^24' ],
    [ '14', '16937289', 'λ3072', 'T2^25' ]
]
ts = ["20", "21", "22", "23", "24", "25"]
colors = ["tab:red", "tab:green", "tab:blue", "tab:orange", "tab:purple", "tab:brown"]
 # circle, triangle, square
markers = ['o', '^', 's', 'D', 'P', 'X'] 
x = [[],[],[],[],[],[]]
y = [[],[],[],[],[],[]]
for i in range(len(data)):
    x[i%6].append(int(data[i][0]))
    y[i%6].append(int(data[i][1]))
for i in range(6):
    plt.plot(x[i], y[i], color=colors[i], label="$"+ts[i]+"$", marker=markers[i])
plt.axvline(x=9.00285,  color='black')
plt.text(10, 18173000, 'Minimum', ha='right', fontsize=13)
# plt.annotate('Minimum', xy=(10.00000001, 4200000), xytext=(0, 50), 
#              textcoords='offset points', ha='right', va='bottom',
#              arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0'))

plt.legend(title=r'$\tau$', fontsize=13, title_fontsize=13)
plt.xlabel('Number of Skipped Proof', labelpad= 10.9,fontsize=15 ) #y=-0.1
plt.ylabel('Gas Used ($10^6$)', labelpad= 7, fontsize=15)
plt.gca().yaxis.get_offset_text().set_visible(False)
def custom_formatter(x, _):
    return '{:.0f}'.format(x * 1e-6)
plt.gca().yaxis.set_major_formatter(plt.FuncFormatter(custom_formatter))
plt.xticks(fontsize=13)
plt.yticks(fontsize=13)

plt.subplots_adjust(bottom=0.1)
plt.grid(True, linestyle="--")
plt.tight_layout()
plt.savefig('delta-3072.png', dpi=500)
plt.show()