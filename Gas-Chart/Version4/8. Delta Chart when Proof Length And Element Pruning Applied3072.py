# Copyright 2024 justin
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import matplotlib.pyplot as plt
import matplotlib.lines as mlines
import numpy as np
data = [
    [ '0', '5829616', 'λ3072', 'T2^20' ],
    [ '0', '6124874', 'λ3072', 'T2^21' ],
    [ '0', '6441478', 'λ3072', 'T2^22' ],
    [ '0', '6739743', 'λ3072', 'T2^23' ],
    [ '0', '7057209', 'λ3072', 'T2^24' ],
    [ '0', '7366963', 'λ3072', 'T2^25' ],
    [ '1', '5524178', 'λ3072', 'T2^20' ],
    [ '1', '5817380', 'λ3072', 'T2^21' ],
    [ '1', '6133938', 'λ3072', 'T2^22' ],
    [ '1', '6428919', 'λ3072', 'T2^23' ],
    [ '1', '6744764', 'λ3072', 'T2^24' ],
    [ '1', '7055526', 'λ3072', 'T2^25' ],
    [ '2', '5220287', 'λ3072', 'T2^20' ],
    [ '2', '5513594', 'λ3072', 'T2^21' ],
    [ '2', '5829179', 'λ3072', 'T2^22' ],
    [ '2', '6121661', 'λ3072', 'T2^23' ],
    [ '2', '6436058', 'λ3072', 'T2^24' ],
    [ '2', '6747961', 'λ3072', 'T2^25' ],
    [ '3', '4920082', 'λ3072', 'T2^20' ],
    [ '3', '5212710', 'λ3072', 'T2^21' ],
    [ '3', '5526135', 'λ3072', 'T2^22' ],
    [ '3', '5819603', 'λ3072', 'T2^23' ],
    [ '3', '6129524', 'λ3072', 'T2^24' ],
    [ '3', '6439060', 'λ3072', 'T2^25' ],
    [ '4', '4624947', 'λ3072', 'T2^20' ],
    [ '4', '4915248', 'λ3072', 'T2^21' ],
    [ '4', '5228015', 'λ3072', 'T2^22' ],
    [ '4', '5519074', 'λ3072', 'T2^23' ],
    [ '4', '5828906', 'λ3072', 'T2^24' ],
    [ '4', '6136283', 'λ3072', 'T2^25' ],
    [ '5', '4336880', 'λ3072', 'T2^20' ],
    [ '5', '4625831', 'λ3072', 'T2^21' ],
    [ '5', '4937649', 'λ3072', 'T2^22' ],
    [ '5', '5227632', 'λ3072', 'T2^23' ],
    [ '5', '5534585', 'λ3072', 'T2^24' ],
    [ '5', '5839884', 'λ3072', 'T2^25' ],
    [ '6', '4063545', 'λ3072', 'T2^20' ],
    [ '6', '4349673', 'λ3072', 'T2^21' ],
    [ '6', '4659953', 'λ3072', 'T2^22' ],
    [ '6', '4949364', 'λ3072', 'T2^23' ],
    [ '6', '5254832', 'λ3072', 'T2^24' ],
    [ '6', '5558854', 'λ3072', 'T2^25' ],
    [ '7', '3815077', 'λ3072', 'T2^20' ],
    [ '7', '4101999', 'λ3072', 'T2^21' ],
    [ '7', '4409494', 'λ3072', 'T2^22' ],
    [ '7', '4698500', 'λ3072', 'T2^23' ],
    [ '7', '5002395', 'λ3072', 'T2^24' ],
    [ '7', '5304433', 'λ3072', 'T2^25' ],
    [ '8', '3618862', 'λ3072', 'T2^20' ],
    [ '8', '3904583', 'λ3072', 'T2^21' ],
    [ '8', '4210198', 'λ3072', 'T2^22' ],
    [ '8', '4497617', 'λ3072', 'T2^23' ],
    [ '8', '4800316', 'λ3072', 'T2^24' ],
    [ '8', '5103043', 'λ3072', 'T2^25' ],
    [ '9', '3523800', 'λ3072', 'T2^20' ],
    [ '9', '3807834', 'λ3072', 'T2^21' ],
    [ '9', '4111979', 'λ3072', 'T2^22' ],
    [ '9', '4398750', 'λ3072', 'T2^23' ],
    [ '9', '4697600', 'λ3072', 'T2^24' ],
    [ '9', '4999350', 'λ3072', 'T2^25' ],
    [ '10', '3628274', 'λ3072', 'T2^20' ],
    [ '10', '3911199', 'λ3072', 'T2^21' ],
    [ '10', '4212439', 'λ3072', 'T2^22' ],
    [ '10', '4502897', 'λ3072', 'T2^23' ],
    [ '10', '4796662', 'λ3072', 'T2^24' ],
    [ '10', '5095825', 'λ3072', 'T2^25' ],
    [ '11', '4138376', 'λ3072', 'T2^20' ],
    [ '11', '4420689', 'λ3072', 'T2^21' ],
    [ '11', '4717658', 'λ3072', 'T2^22' ],
    [ '11', '5008369', 'λ3072', 'T2^23' ],
    [ '11', '5302990', 'λ3072', 'T2^24' ],
    [ '11', '5598803', 'λ3072', 'T2^25' ],
    [ '12', '5476636', 'λ3072', 'T2^20' ],
    [ '12', '5759597', 'λ3072', 'T2^21' ],
    [ '12', '6054628', 'λ3072', 'T2^22' ],
    [ '12', '6341731', 'λ3072', 'T2^23' ],
    [ '12', '6635824', 'λ3072', 'T2^24' ],
    [ '12', '6931585', 'λ3072', 'T2^25' ],
    [ '13', '8562792', 'λ3072', 'T2^20' ],
    [ '13', '8843489', 'λ3072', 'T2^21' ],
    [ '13', '9136102', 'λ3072', 'T2^22' ],
    [ '13', '9422092', 'λ3072', 'T2^23' ],
    [ '13', '9714979', 'λ3072', 'T2^24' ],
    [ '13', '10010686', 'λ3072', 'T2^25' ],
    [ '14', '15525591', 'λ3072', 'T2^20' ],
    [ '14', '15804557', 'λ3072', 'T2^21' ],
    [ '14', '16095349', 'λ3072', 'T2^22' ],
    [ '14', '16381908', 'λ3072', 'T2^23' ],
    [ '14', '16672183', 'λ3072', 'T2^24' ],
    [ '14', '16965334', 'λ3072', 'T2^25' ]
]
ts = ["20", "21", "22", "23", "24", "25"]
colors = ["tab:red", "tab:green", "tab:blue", "tab:orange", "tab:purple", "tab:brown"]
 # circle, triangle, square
markers = ['o', '^', 's', 'D', 'P', 'X'] 
x = [[],[],[],[],[],[]]
y = [[],[],[],[],[],[]]
for i in range(len(data)):
    x[i%6].append(int(data[i][0]))
    y[i%6].append(int(data[i][1]))
for i in range(6):
    plt.plot(x[i], y[i], color=colors[i], label="$"+ts[i]+"$", marker=markers[i])
plt.axvline(x=9.00285,  color='black')
plt.text(10, 18173000, 'Minimum', ha='right', fontsize=13)
# plt.annotate('Minimum', xy=(10.00000001, 4200000), xytext=(0, 50), 
#              textcoords='offset points', ha='right', va='bottom',
#              arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0'))

plt.legend(title=r'$\tau$', fontsize=13, title_fontsize=13)
plt.xlabel('Number of Skipped Proof', labelpad= 10.9,fontsize=15 ) #y=-0.1
plt.ylabel('Gas Used ($10^6$)', labelpad= 7, fontsize=15)
plt.gca().yaxis.get_offset_text().set_visible(False)
def custom_formatter(x, _):
    return '{:.0f}'.format(x * 1e-6)
plt.gca().yaxis.set_major_formatter(plt.FuncFormatter(custom_formatter))
plt.xticks(fontsize=13)
plt.yticks(fontsize=13)

plt.subplots_adjust(bottom=0.1)
plt.grid(True, linestyle="--")
plt.tight_layout()
plt.savefig('8. Delta Chart when Proof Length And Element Pruning Applied3072.png', dpi=500)
plt.show()