# Copyright 2024 justin
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

  # 15 20 17233776 3204
  # 15 21 17387576 3588
  # 15 22 17539115 3972
  # 15 23 17690733 4356
  # 15 24 17851161 4740
  # 15 25 18004662 5124

import matplotlib.pyplot as plt
import matplotlib.lines as mlines
import numpy as np
data = [
    [ '0', '3108907', 'λ2048', 'T2^20' ],
    [ '0', '3276931', 'λ2048', 'T2^21' ],
    [ '0', '3442046', 'λ2048', 'T2^22' ],
    [ '0', '3610814', 'λ2048', 'T2^23' ],
    [ '0', '3779857', 'λ2048', 'T2^24' ],
    [ '0', '3950619', 'λ2048', 'T2^25' ],
    [ '1', '2944254', 'λ2048', 'T2^20' ],
    [ '1', '3110948', 'λ2048', 'T2^21' ],
    [ '1', '3274506', 'λ2048', 'T2^22' ],
    [ '1', '3442370', 'λ2048', 'T2^23' ],
    [ '1', '3611015', 'λ2048', 'T2^24' ],
    [ '1', '3780738', 'λ2048', 'T2^25' ],
    [ '2', '2780790', 'λ2048', 'T2^20' ],
    [ '2', '2946155', 'λ2048', 'T2^21' ],
    [ '2', '3109797', 'λ2048', 'T2^22' ],
    [ '2', '3275900', 'λ2048', 'T2^23' ],
    [ '2', '3444117', 'λ2048', 'T2^24' ],
    [ '2', '3612085', 'λ2048', 'T2^25' ],
    [ '3', '2619753', 'λ2048', 'T2^20' ],
    [ '3', '2784240', 'λ2048', 'T2^21' ],
    [ '3', '2946765', 'λ2048', 'T2^22' ],
    [ '3', '3111190', 'λ2048', 'T2^23' ],
    [ '3', '3278569', 'λ2048', 'T2^24' ],
    [ '3', '3444954', 'λ2048', 'T2^25' ],
    [ '4', '2460134', 'λ2048', 'T2^20' ],
    [ '4', '2624060', 'λ2048', 'T2^21' ],
    [ '4', '2785412', 'λ2048', 'T2^22' ],
    [ '4', '2948963', 'λ2048', 'T2^23' ],
    [ '4', '3116393', 'λ2048', 'T2^24' ],
    [ '4', '3280898', 'λ2048', 'T2^25' ],
    [ '5', '2305301', 'λ2048', 'T2^20' ],
    [ '5', '2466887', 'λ2048', 'T2^21' ],
    [ '5', '2628565', 'λ2048', 'T2^22' ],
    [ '5', '2790594', 'λ2048', 'T2^23' ],
    [ '5', '2957191', 'λ2048', 'T2^24' ],
    [ '5', '3120755', 'λ2048', 'T2^25' ],
    [ '6', '2155707', 'λ2048', 'T2^20' ],
    [ '6', '2316897', 'λ2048', 'T2^21' ],
    [ '6', '2477502', 'λ2048', 'T2^22' ],
    [ '6', '2638307', 'λ2048', 'T2^23' ],
    [ '6', '2803673', 'λ2048', 'T2^24' ],
    [ '6', '2966827', 'λ2048', 'T2^25' ],
    [ '7', '2019326', 'λ2048', 'T2^20' ],
    [ '7', '2179541', 'λ2048', 'T2^21' ],
    [ '7', '2338920', 'λ2048', 'T2^22' ],
    [ '7', '2498926', 'λ2048', 'T2^23' ],
    [ '7', '2663649', 'λ2048', 'T2^24' ],
    [ '7', '2825563', 'λ2048', 'T2^25' ],
    [ '8', '1906186', 'λ2048', 'T2^20' ],
    [ '8', '2064791', 'λ2048', 'T2^21' ],
    [ '8', '2223729', 'λ2048', 'T2^22' ],
    [ '8', '2382888', 'λ2048', 'T2^23' ],
    [ '8', '2545716', 'λ2048', 'T2^24' ],
    [ '8', '2706845', 'λ2048', 'T2^25' ],
    [ '9', '1838183', 'λ2048', 'T2^20' ],
    [ '9', '1995392', 'λ2048', 'T2^21' ],
    [ '9', '2153142', 'λ2048', 'T2^22' ],
    [ '9', '2311925', 'λ2048', 'T2^23' ],
    [ '9', '2473485', 'λ2048', 'T2^24' ],
    [ '9', '2633281', 'λ2048', 'T2^25' ],
    [ '10', '1860915', 'λ2048', 'T2^20' ],
    [ '10', '2016726', 'λ2048', 'T2^21' ],
    [ '10', '2173931', 'λ2048', 'T2^22' ],
    [ '10', '2331057', 'λ2048', 'T2^23' ],
    [ '10', '2492653', 'λ2048', 'T2^24' ],
    [ '10', '2650353', 'λ2048', 'T2^25' ],
    [ '11', '2069391', 'λ2048', 'T2^20' ],
    [ '11', '2224945', 'λ2048', 'T2^21' ],
    [ '11', '2380904', 'λ2048', 'T2^22' ],
    [ '11', '2536070', 'λ2048', 'T2^23' ],
    [ '11', '2698141', 'λ2048', 'T2^24' ],
    [ '11', '2854080', 'λ2048', 'T2^25' ],
    [ '12', '2668791', 'λ2048', 'T2^20' ],
    [ '12', '2823936', 'λ2048', 'T2^21' ],
    [ '12', '2978995', 'λ2048', 'T2^22' ],
    [ '12', '3132241', 'λ2048', 'T2^23' ],
    [ '12', '3294120', 'λ2048', 'T2^24' ],
    [ '12', '3448753', 'λ2048', 'T2^25' ],
    [ '13', '4140289', 'λ2048', 'T2^20' ],
    [ '13', '4294799', 'λ2048', 'T2^21' ],
    [ '13', '4448688', 'λ2048', 'T2^22' ],
    [ '13', '4600643', 'λ2048', 'T2^23' ],
    [ '13', '4761749', 'λ2048', 'T2^24' ],
    [ '13', '4916325', 'λ2048', 'T2^25' ],
    [ '14', '7740123', 'λ2048', 'T2^20' ],
    [ '14', '7893968', 'λ2048', 'T2^21' ],
    [ '14', '8046677', 'λ2048', 'T2^22' ],
    [ '14', '8198247', 'λ2048', 'T2^23' ],
    [ '14', '8359093', 'λ2048', 'T2^24' ],
    [ '14', '8512733', 'λ2048', 'T2^25' ]
  ]
ts = ["20", "21", "22", "23", "24", "25"]
colors = ["tab:red", "tab:green", "tab:blue", "tab:orange", "tab:purple", "tab:brown"]
 # circle, triangle, square
markers = ['o', '^', 's', 'D', 'P', 'X'] 
x = [[],[],[],[],[],[]]
y = [[],[],[],[],[],[]]
for i in range(len(data)):
    x[i%6].append(int(data[i][0]))
    y[i%6].append(int(data[i][1]))
for i in range(6):
    plt.plot(x[i], y[i], color=colors[i], label="$"+ts[i]+"$", marker=markers[i])
plt.axvline(x=9.00000001, color='black')
plt.text(10, 9180000, 'Minimum', ha='right', fontsize=13)
# plt.annotate('Minimum', xy=(10.00000001, 4200000), xytext=(0, 50), 
#              textcoords='offset points', ha='right', va='bottom',
#              arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0'))

plt.legend(title=r'$\tau$', fontsize=13, title_fontsize=13)
plt.xlabel('Number of Skipped Proof', labelpad= 10.9,fontsize=15 ) 
plt.ylabel('Gas Used ($10^6$)', labelpad= 18, fontsize=15)
plt.gca().yaxis.get_offset_text().set_visible(False)
plt.xticks(fontsize=13)
plt.yticks(fontsize=13)
# Adjust the bottom margin
#plt.subplots_adjust(top=0.55)
plt.subplots_adjust(bottom=0.1)
plt.grid(True, linestyle="--")
plt.tight_layout()
plt.savefig('8. Delta Chart when Proof Length And Element Pruning Applied.png', dpi=500)
plt.show()